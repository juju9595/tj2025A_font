[ 언어 ] : 정해진 규칙/기호 집합
[ 언어 와 언어 사이 ] :  번역이 필요하다. 컴파일/인터프리터/랜더링
[ HTML 언어 와 기계어 사이 ] : 브라우저( 크롬,엣지,사파리 등등)
[ HTML 언어 ]
   1. H(Hyper:이동) T(Text:텍스트) M(Markup:마크업) L(Language:언어) 
      - 이동이 가능한 문자들을 제공하는 마크업언어
   2. 마크업 : 구조화된 표식, 
   3. 언어 : 규칙/기호 집합
       마크업 언어란 : 텍스트 앞뒤에 마크/덮쳐서 하는 언어
        * 각 마크업에는 미리 정해진 기능들이 포함
       예) <h1>안녕</h1>
   4. 주석이란 : 메모지(번역하지 않는 구역)
      <!-- 내용물 -->
[ 마크업 ]
     - HTML 언어를 만든 회사에서 미리 정의한 규칙 = 문법
     방법1. <마크업명> 내용물 </마크업명>
         - <h1> </h1> 
     방법2. <마크업명/>
         - <img />
[ 마크업 종류 ]







    7. <h1>
    8. <p> </p> : 문단(Paragrath) 마크업, 구역의미 
    9. <br / >






    15. <img /> : 이미지 마크업
    16. <audio> </audi> : 오이오 마크업
    17. <viveo> </viveo> : 비디오 마크업
        15-16 공통 속성, src="파일경로"
        16-17 공통 속성,
            controls="controls" : 컨트롤러 제공
            autoplay="autoplay" : 자동실행, 정책상 차단
            muted="muted"       : 음소거, auotoplay + muted : 비디오 자동실행 가능



    18. <input> : 입력 상자
         - [ 주요 속성명 ]
         (1) type       : 입력 방법
            type = "text"           : 문자 입력 , type 생략시 기본값 
            type = "password"       : 가려진 문자 입력 
            type = "file"           : 첨부파일 입력 *multiple속성 : 다중선택 
            type = "radio"          : 단일선택의 선택상자 * name 속성값이 동일
            type = "checkbox"       : 복수선택의 선택상자 
            type = "number"         : 숫자 입력 
            type = "date"           : 날짜 선택
            type = "datetime-local" : 날짜/시간 선택 
            type = "time"           : 시간 선택 
            type = "month"          : 월 선택 
            type = "week"           : 주 선택 
            type = "range"          : 범위 스크롤 
            type = "submit"         : 폼 전송
            type = "reset"          : 폼 초기화
            type = "button"         : 일반 버튼 vs <button type="button"> </button>
         (2) name       : 동일한 마크업간의 식별 이름
         (3) value      : 입력상자에 데이터
         (4) disable    : 비활성화(사용금지)
         (5) readyonly  : 수정불가능(수정금지)
         (6) maxlength  : 최대 글자수 제한
         (7) autofocus  : 지정한 입력상자의 포커스(마우스커서) 설정
         (8) placeholder : 입력상자의 가이드텍스트

    20. 표 만들기
    <table> : 전체 표를 감싼 마크업
        <tr> : 테이블 행/가로
            <th> : 테이블 제목(열/세로) 셀/칸
            <td> : 테이블 데이터(열/세로) 셀/칸

    속성
        boarder = "1" : 테이블 테두리
        style="boarder-collapse : collapse;" : 이중 테두리를 하나의 테투리로 변경
        rowspan = "행병합"
        colspan = "열병합"
        
[ 프로그래밍 관점 ]
    - 프로그래밍 구성하기 위한 접근 방식
    1. 절차지향 프로그래밍 , C언어 
        (1) 함수(절차) 이용한 순서가 정해진 작업
        (2) 코드가 위에서 아래로 순차적으로 실행 , 단순하다. 

    2. 객체지향 프로그래밍 , JAVA/JS/PYTHON/C++
        (1) 객체(데이터/기능)을 *하나로 묶어서* 처리 작업 
        (2) 코드의 재사용 , 확장설 , 복잡하다.

    [ 객체 ]
        1. 정의
            (1) 객체(Object)    : 주체(나/대상) 가 아닌 다른 실체(타인)
                주체(Subject)   : '나/대상' 라는 실체 , 중심
            (2) 예시1] : '김현수' 강사( 해당 클래스를 진행하는 주체 )
                        '김현수' 주체 기준으로 '유재석' 수강생 객체 ( 해당 클래스를 듣는 수강생 객체 ) 
                        '유재석' 수강생( 주체 ) <--------> '김현수' 강사 (객체)
        2. 생활속 객체란? 모두(물리적개념, 논리적개념 : 어떠한 대상을 정의[데이터/기능] 가능한 것 )
            - 공기 객체 , 안경 객체 , 컴퓨터 객체 , 강의 객체 , 사람 객체 
            ---> 개발자(주체자) 관점에서 컴퓨터속( 객체 ) 를 만든다.
    [ JS 객체 ]
        1. 종류
            (1) 클래스 기반의 객체  : class(객체 만들기 위한 틀/설계도) 
            (2) 클래스 가 없는 객체 : { }
        2. 배열 과 객체 차이점 
            (1) 배열 :
                [ ]     , 인덱스  , 자료 순서 있다. , 여러개 목록
            (2) 객체 :
                { }     , 속성명  , 자료 순서 없다. , 하나의 정보
        * 주의할점 : 변수는 배열과객체 자료를 1개 저장하는 메모리 공간 
            const var1 = [ 10 , 'hello' ]                   - 자료2개를 저장하는 배열 자료 1개를 변수에 저장 
            const var2 = { props1 : 10 ,  props : 'hello' } - 자료2개를 속성으로 구분하여 객체 자료 1개를 변수에 저장 
                -> 변수 vs 자료( 자료형 : 숫자/문자열/불리언/특수/배열/객체 )
        * 예시] 제품목록
            1) const 제품목록 = [ [ '콜라' , 1000 ] , [ '사이다' , 2000]  ]
            2) const 제품목록 = { { name : '콜라' , price : 1000 } , { name : '사이다' , price : 3000 } }
            3) const 제품목록 = [ { name : '콜라' , price : 1000 } , { name : '사이다' , price : 3000 } ]
                ->  * 정보를 만들때는 객체화 하고, 동일한 정보(객체)들을 여러개 묶을때는 배열 *


(9)(마크업객체).flies[0]            : 지정 마크업의 업로드된 파일객체 변환;
    사용가능마크업 : <input type = "file"/>
    ( + 파일객체을 임의의 URL 주소 생성하여 반환하는 함수)
        - URL.createObjectURL( 파일객체 )
        - 반환값: 
        - 사용처 : 백엔드에 옵로드 하기전 *미리보기 기능*

[날짜/시간 객체]
    - new Date(): 현재 시스템(pc)의 날짜와 시간 갖는 객채 반환
    1. let.now = new Date()     : 날짜/시간 객체
    2. now.getFullYear()        : 연도 반환 함수
    3. now.getmonth()           : 현재 월 반환 함수 *1월은 0부터 시작하므로 +1
    4. now.getday()             : 현재 요일 반환 함수 * 일요일은 0반환, 월요일 1반환 ~~ 토요일 6반환 
    5. now.getDate()            : 현재 월의 일 반환 함수